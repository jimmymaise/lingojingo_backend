image: docker:latest
variables:
  PIP_PROCESS_DEPENDENCY_LINKS: 1
  PROJECT_NAME: sts

stages:
  #  - test
  - build
  - deploy
  - add_version



#
#unit_test:
#  image: node:latest
#
#  stage: test
#  script:
#    - npm install
##    - npm test
#  artifacts:
#    paths:
#      - node_modules/

#Deploy for releasing to production

build:
  stage: build
  image: google/cloud-sdk
  services:
    - docker:dind
  script:
    - cloudbuild
  only:
    - master
    - /^kube\d+\.\d+\.\d+$/


deploy_staging:
  stage: deploy
  image: google/cloud-sdk

  script:
    - echo "Deploy to staging server"
    - deploy
  when: always
  environment:
    name: staging
    url: https://$CI_ENVIRONMENT_SLUG-$PROJECT_NAME.$MY_DOMAIN
  only:
    - master
    - /^kube\d+\.\d+\.\d+$/


deploy_production:
  stage: deploy
  tags:
    - runner1
  environment:
    name: production
    url: https://app.lingojingo.com
  variables:
    NODE_ENV: $PROD_ENV
    MONGO_PROD_URL: $MONGO_PROD_URL
    MONGO_STAG_URL: $MONGO_STAG_URL
  script:
    - echo "Deploy to staging server"
    - deploy
  only:
    - /^v\d+\.\d+\.\d+$/

add_version_stag:
  stage: add_version
  only:
    - /^r\d+\.\d+\.\d+$/
  script:
    - UPDATE_VERSION_URL="${STAG_BE_URL?}/version/backend/${CI_COMMIT_TAG?}"
    - curl -X POST  ${UPDATE_VERSION_URL?}
    - echo  ${UPDATE_VERSION_URL?}

add_version_prod:
  stage: add_version
  only:
    - /^v\d+\.\d+\.\d+$/
  script:
    - UPDATE_VERSION_URL="${PROD_BE_URL?}/version/backend/${CI_COMMIT_TAG?}"
    - curl -X POST  ${UPDATE_VERSION_URL?}
    - echo  ${UPDATE_VERSION_URL?}


# Custom Functions -------------------------------------------------------
.custom_functions: &custom_functions |
  export VERSION=$(echo $CI_COMMIT_SHA | cut -c8-25)
  export DEPLOYMENT_NAME=$PROJECT_NAME-$CI_ENVIRONMENT_SLUG

  function cloudbuild(){
    echo "$GCP_SERVICE_KEY" > gcloud-service-key.json # Google Cloud service accounts
    gcloud auth activate-service-account --key-file gcloud-service-key.json
    gcloud config set project $GCP_PROJECT_ID
    gcloud builds submit . --config=cloudbuild.yaml --substitutions _IMAGE_NAME=$PROJECT_NAME,_VERSION=$VERSION
  }
  function deploy() {
    echo "$GCP_SERVICE_KEY" > gcloud-service-key.json # Google Cloud service accounts
    gcloud auth activate-service-account --key-file gcloud-service-key.json
    gcloud beta container clusters get-credentials $GCP_KUBE_NAME --region $GCP_REGION --project $GCP_PROJECT_ID

    kubectl set image deployment.extensions/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=gcr.io/$GCP_PROJECT_ID/$PROJECT_NAME:$VERSION
    kubectl rollout status deployment.extensions/$DEPLOYMENT_NAME
    kubectl get all,ing -l app=$DEPLOYMENT_NAME
  }

before_script:
  - *custom_functions
